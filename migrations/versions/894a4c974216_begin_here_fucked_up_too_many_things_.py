"""Begin Here -> fucked up too many things, starting again from 0

Revision ID: 894a4c974216
Revises: 
Create Date: 2021-06-07 13:09:12.993624

"""
from alembic import op
import sqlalchemy as sa
import sqlalchemy_utils


# revision identifiers, used by Alembic.
revision = "894a4c974216"
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "suggestion",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("url", sa.String(), nullable=True),
        sa.Column("title", sa.String(), nullable=True),
        sa.Column("summary", sa.String(), nullable=True),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_suggestion")),
    )
    op.create_table(
        "user",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("goog_id", sa.String(), nullable=True),
        sa.Column("firstname", sa.String(), nullable=True),
        sa.Column("username", sa.String(length=64), nullable=True),
        sa.Column("email", sa.String(length=120), nullable=True),
        sa.Column("add_by_email", sa.String(length=120), nullable=True),
        sa.Column("password_hash", sa.String(length=128), nullable=True),
        sa.Column("account_created_date", sa.DateTime(), nullable=True),
        sa.Column("last_active", sa.DateTime(), nullable=True),
        sa.Column("last_action", sa.String(), nullable=True),
        sa.Column("token", sa.String(length=32), nullable=True),
        sa.Column("token_expiration", sa.DateTime(), nullable=True),
        sa.Column("preferences", sa.String(), nullable=True),
        sa.Column("admin", sa.Boolean(), nullable=True),
        sa.Column("test_account", sa.Boolean(), nullable=True),
        sa.Column("suggestion_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["suggestion_id"],
            ["suggestion.id"],
            name=op.f("fk_user_suggestion_id_suggestion"),
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_user")),
        sa.UniqueConstraint("add_by_email", name=op.f("uq_user_add_by_email")),
    )
    with op.batch_alter_table("user", schema=None) as batch_op:
        batch_op.create_index(batch_op.f("ix_user_email"), ["email"], unique=True)
        batch_op.create_index(
            batch_op.f("ix_user_firstname"), ["firstname"], unique=False
        )
        batch_op.create_index(batch_op.f("ix_user_goog_id"), ["goog_id"], unique=True)
        batch_op.create_index(
            batch_op.f("ix_user_preferences"), ["preferences"], unique=False
        )
        batch_op.create_index(batch_op.f("ix_user_token"), ["token"], unique=True)
        batch_op.create_index(batch_op.f("ix_user_username"), ["username"], unique=True)

    op.create_table(
        "approved__sender",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=True),
        sa.Column("email", sa.String(length=120), nullable=True),
        sa.ForeignKeyConstraint(
            ["user_id"], ["user.id"], name=op.f("fk_approved__sender_user_id_user")
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_approved__sender")),
    )
    op.create_table(
        "article",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("uuid", sqlalchemy_utils.types.uuid.UUIDType(), nullable=True),
        sa.Column("unread", sa.Boolean(), nullable=True),
        sa.Column("title", sa.String(length=255), nullable=True),
        sa.Column("filetype", sa.String(length=32), nullable=True),
        sa.Column("source", sa.String(length=500), nullable=True),
        sa.Column("source_url", sa.String(length=500), nullable=True),
        sa.Column("content", sa.Text(), nullable=True),
        sa.Column("date_read", sa.DateTime(), nullable=True),
        sa.Column("user_id", sa.Integer(), nullable=True),
        sa.Column("archived", sa.Boolean(), nullable=True),
        sa.Column("highlightedText", sa.String(), nullable=True),
        sa.Column("progress", sa.Float(), nullable=True),
        sa.Column("bookmarks", sa.String(), nullable=True),
        sa.Column("done", sa.Boolean(), nullable=True),
        sa.Column("notes", sa.Text(), nullable=True),
        sa.Column("article_created_date", sa.DateTime(), nullable=True),
        sa.Column("read_time", sa.String(), nullable=True),
        sa.ForeignKeyConstraint(
            ["user_id"], ["user.id"], name=op.f("fk_article_user_id_user")
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_article")),
    )
    with op.batch_alter_table("article", schema=None) as batch_op:
        batch_op.create_index(
            batch_op.f("ix_article_archived"), ["archived"], unique=False
        )
        batch_op.create_index(
            batch_op.f("ix_article_progress"), ["progress"], unique=False
        )
        batch_op.create_index(batch_op.f("ix_article_title"), ["title"], unique=False)
        batch_op.create_index(batch_op.f("ix_article_unread"), ["unread"], unique=False)
        batch_op.create_index(
            batch_op.f("ix_article_user_id"), ["user_id"], unique=False
        )
        batch_op.create_index(batch_op.f("ix_article_uuid"), ["uuid"], unique=False)

    op.create_table(
        "notification",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(length=128), nullable=True),
        sa.Column("user_id", sa.Integer(), nullable=True),
        sa.Column("timestamp", sa.Float(), nullable=True),
        sa.Column("payload_json", sa.Text(), nullable=True),
        sa.ForeignKeyConstraint(
            ["user_id"], ["user.id"], name=op.f("fk_notification_user_id_user")
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_notification")),
    )
    with op.batch_alter_table("notification", schema=None) as batch_op:
        batch_op.create_index(
            batch_op.f("ix_notification_name"), ["name"], unique=False
        )
        batch_op.create_index(
            batch_op.f("ix_notification_timestamp"), ["timestamp"], unique=False
        )

    op.create_table(
        "tag",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(length=128), nullable=True),
        sa.Column("user_id", sa.Integer(), nullable=True),
        sa.Column("archived", sa.Boolean(), nullable=True),
        sa.Column("goal", sa.String(length=512), nullable=True),
        sa.ForeignKeyConstraint(
            ["user_id"], ["user.id"], name=op.f("fk_tag_user_id_user")
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_tag")),
    )
    with op.batch_alter_table("tag", schema=None) as batch_op:
        batch_op.create_index(batch_op.f("ix_tag_archived"), ["archived"], unique=False)
        batch_op.create_index(batch_op.f("ix_tag_name"), ["name"], unique=False)
        batch_op.create_index(batch_op.f("ix_tag_user_id"), ["user_id"], unique=False)

    op.create_table(
        "task",
        sa.Column("id", sa.String(length=36), nullable=False),
        sa.Column("name", sa.String(length=128), nullable=True),
        sa.Column("description", sa.String(length=128), nullable=True),
        sa.Column("user_id", sa.Integer(), nullable=True),
        sa.Column("complete", sa.Boolean(), nullable=True),
        sa.ForeignKeyConstraint(
            ["user_id"], ["user.id"], name=op.f("fk_task_user_id_user")
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_task")),
    )
    with op.batch_alter_table("task", schema=None) as batch_op:
        batch_op.create_index(batch_op.f("ix_task_name"), ["name"], unique=False)

    op.create_table(
        "topic",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("title", sa.String(length=512), nullable=True),
        sa.Column("user_id", sa.Integer(), nullable=True),
        sa.Column("archived", sa.Boolean(), nullable=True),
        sa.ForeignKeyConstraint(
            ["user_id"], ["user.id"], name=op.f("fk_topic_user_id_user")
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_topic")),
    )
    with op.batch_alter_table("topic", schema=None) as batch_op:
        batch_op.create_index(
            batch_op.f("ix_topic_archived"), ["archived"], unique=False
        )
        batch_op.create_index(batch_op.f("ix_topic_title"), ["title"], unique=False)
        batch_op.create_index(batch_op.f("ix_topic_user_id"), ["user_id"], unique=False)

    op.create_table(
        "highlight",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("text", sa.String(), nullable=True),
        sa.Column("user_id", sa.Integer(), nullable=True),
        sa.Column("article_id", sa.Integer(), nullable=True),
        sa.Column("archived", sa.Boolean(), nullable=True),
        sa.Column("no_topics", sa.Boolean(), nullable=True),
        sa.Column("note", sa.String(), nullable=True),
        sa.Column("position", sa.String(), nullable=True),
        sa.Column("created_date", sa.DateTime(), nullable=True),
        sa.Column("review_date", sa.DateTime(), nullable=True),
        sa.Column("review_schedule", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["article_id"], ["article.id"], name=op.f("fk_highlight_article_id_article")
        ),
        sa.ForeignKeyConstraint(
            ["user_id"], ["user.id"], name=op.f("fk_highlight_user_id_user")
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_highlight")),
    )
    with op.batch_alter_table("highlight", schema=None) as batch_op:
        batch_op.create_index(
            batch_op.f("ix_highlight_archived"), ["archived"], unique=False
        )
        batch_op.create_index(
            batch_op.f("ix_highlight_article_id"), ["article_id"], unique=False
        )
        batch_op.create_index(
            batch_op.f("ix_highlight_no_topics"), ["no_topics"], unique=False
        )
        batch_op.create_index(batch_op.f("ix_highlight_note"), ["note"], unique=False)
        batch_op.create_index(
            batch_op.f("ix_highlight_user_id"), ["user_id"], unique=False
        )

    op.create_table(
        "tags_articles",
        sa.Column("tag_id", sa.Integer(), nullable=False),
        sa.Column("article_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["article_id"],
            ["article.id"],
            name=op.f("fk_tags_articles_article_id_article"),
        ),
        sa.ForeignKeyConstraint(
            ["tag_id"], ["tag.id"], name=op.f("fk_tags_articles_tag_id_tag")
        ),
    )
    op.create_table(
        "tags_topics",
        sa.Column("tag_id", sa.Integer(), nullable=False),
        sa.Column("topic_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["tag_id"], ["tag.id"], name=op.f("fk_tags_topics_tag_id_tag")
        ),
        sa.ForeignKeyConstraint(
            ["topic_id"], ["topic.id"], name=op.f("fk_tags_topics_topic_id_topic")
        ),
    )
    op.create_table(
        "highlights_topics",
        sa.Column("highlight_id", sa.Integer(), nullable=False),
        sa.Column("topic_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["highlight_id"],
            ["highlight.id"],
            name=op.f("fk_highlights_topics_highlight_id_highlight"),
        ),
        sa.ForeignKeyConstraint(
            ["topic_id"], ["topic.id"], name=op.f("fk_highlights_topics_topic_id_topic")
        ),
        sa.PrimaryKeyConstraint(
            "highlight_id", "topic_id", name=op.f("pk_highlights_topics")
        ),
    )
    with op.batch_alter_table("highlights_topics", schema=None) as batch_op:
        batch_op.create_index(
            batch_op.f("ix_highlights_topics_highlight_id"),
            ["highlight_id"],
            unique=False,
        )
        batch_op.create_index(
            batch_op.f("ix_highlights_topics_topic_id"), ["topic_id"], unique=False
        )

    op.create_table(
        "tags_highlights",
        sa.Column("tag_id", sa.Integer(), nullable=False),
        sa.Column("highlight_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["highlight_id"],
            ["highlight.id"],
            name=op.f("fk_tags_highlights_highlight_id_highlight"),
        ),
        sa.ForeignKeyConstraint(
            ["tag_id"], ["tag.id"], name=op.f("fk_tags_highlights_tag_id_tag")
        ),
    )
    with op.batch_alter_table("tags_highlights", schema=None) as batch_op:
        batch_op.create_index(
            batch_op.f("ix_tags_highlights_highlight_id"),
            ["highlight_id"],
            unique=False,
        )
        batch_op.create_index(
            batch_op.f("ix_tags_highlights_tag_id"), ["tag_id"], unique=False
        )

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("tags_highlights", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_tags_highlights_tag_id"))
        batch_op.drop_index(batch_op.f("ix_tags_highlights_highlight_id"))

    op.drop_table("tags_highlights")
    with op.batch_alter_table("highlights_topics", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_highlights_topics_topic_id"))
        batch_op.drop_index(batch_op.f("ix_highlights_topics_highlight_id"))

    op.drop_table("highlights_topics")
    op.drop_table("tags_topics")
    op.drop_table("tags_articles")
    with op.batch_alter_table("highlight", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_highlight_user_id"))
        batch_op.drop_index(batch_op.f("ix_highlight_note"))
        batch_op.drop_index(batch_op.f("ix_highlight_no_topics"))
        batch_op.drop_index(batch_op.f("ix_highlight_article_id"))
        batch_op.drop_index(batch_op.f("ix_highlight_archived"))

    op.drop_table("highlight")
    with op.batch_alter_table("topic", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_topic_user_id"))
        batch_op.drop_index(batch_op.f("ix_topic_title"))
        batch_op.drop_index(batch_op.f("ix_topic_archived"))

    op.drop_table("topic")
    with op.batch_alter_table("task", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_task_name"))

    op.drop_table("task")
    with op.batch_alter_table("tag", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_tag_user_id"))
        batch_op.drop_index(batch_op.f("ix_tag_name"))
        batch_op.drop_index(batch_op.f("ix_tag_archived"))

    op.drop_table("tag")
    with op.batch_alter_table("notification", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_notification_timestamp"))
        batch_op.drop_index(batch_op.f("ix_notification_name"))

    op.drop_table("notification")
    with op.batch_alter_table("article", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_article_uuid"))
        batch_op.drop_index(batch_op.f("ix_article_user_id"))
        batch_op.drop_index(batch_op.f("ix_article_unread"))
        batch_op.drop_index(batch_op.f("ix_article_title"))
        batch_op.drop_index(batch_op.f("ix_article_progress"))
        batch_op.drop_index(batch_op.f("ix_article_archived"))

    op.drop_table("article")
    op.drop_table("approved__sender")
    with op.batch_alter_table("user", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_user_username"))
        batch_op.drop_index(batch_op.f("ix_user_token"))
        batch_op.drop_index(batch_op.f("ix_user_preferences"))
        batch_op.drop_index(batch_op.f("ix_user_goog_id"))
        batch_op.drop_index(batch_op.f("ix_user_firstname"))
        batch_op.drop_index(batch_op.f("ix_user_email"))

    op.drop_table("user")
    op.drop_table("suggestion")
    # ### end Alembic commands ###
